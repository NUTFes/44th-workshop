"use client";

import { FC, useRef, useCallback, useState } from "react";
import Image from "next/image";

interface QRCodeProps {
    url: string;
    size?: number;
    onDownload?: (canvas: HTMLCanvasElement) => void;
}

const QRCodeComponent: FC<QRCodeProps> = ({ url, size = 250, onDownload }) => {
    const imgRef = useRef<HTMLImageElement>(null);
    const [imageError, setImageError] = useState(false);

    // QR Server API を使用してQRコードを生成
    const qrImageUrl = `https://api.qrserver.com/v1/create-qr-code/?size=${size}x${size}&data=${encodeURIComponent(url)}&format=png&margin=10`;

    const handleDownload = useCallback(async () => {
        if (!onDownload) return;

        try {
            // QRコード画像をfetchして、canvasに描画してからダウンロード
            const response = await fetch(qrImageUrl);
            if (!response.ok) {
                console.error('Failed to fetch QR code image:', response.status);
                return;
            }

            const blob = await response.blob();
            const img = document.createElement('img');

            img.onload = () => {
                const canvas = document.createElement('canvas');
                const ctx = canvas.getContext('2d');

                if (ctx) {
                    canvas.width = size;
                    canvas.height = size;

                    // 背景を白で塗りつぶし
                    ctx.fillStyle = '#FFFFFF';
                    ctx.fillRect(0, 0, size, size);

                    // 画像を描画
                    ctx.drawImage(img, 0, 0, size, size);

                    onDownload(canvas);
                }
                // メモリリークを防ぐためにURLを解放
                URL.revokeObjectURL(img.src);
            };

            img.onerror = () => {
                console.error('Failed to load QR code image');
                URL.revokeObjectURL(img.src);
            };

            img.src = URL.createObjectURL(blob);
        } catch (error) {
            console.error('Download failed:', error);
        }
    }, [qrImageUrl, size, onDownload]);

    const handleImageError = useCallback(() => {
        console.error('QR Code image failed to load');
        setImageError(true);
    }, []);

    const handleImageLoad = useCallback(() => {
        setImageError(false);
    }, []);

    return (
        <div style={{ textAlign: 'center' }}>
            <div
                style={{
                    display: 'inline-block',
                    padding: '1rem',
                    backgroundColor: 'white',
                    border: '1px solid #ddd',
                    borderRadius: '8px',
                    marginBottom: '1rem'
                }}
            >
                {imageError ? (
                    <div
                        style={{
                            width: size,
                            height: size,
                            display: 'flex',
                            alignItems: 'center',
                            justifyContent: 'center',
                            backgroundColor: '#f3f4f6',
                            color: '#6b7280',
                            border: '1px solid #d1d5db',
                            borderRadius: '4px',
                            fontSize: '0.875rem'
                        }}
                    >
                        QR Code failed to load
                    </div>
                ) : (
                    <Image
                        ref={imgRef}
                        src={qrImageUrl}
                        alt="QR Code"
                        width={size}
                        height={size}
                        style={{
                            display: 'block',
                            borderRadius: '4px'
                        }}
                        onError={handleImageError}
                        onLoad={handleImageLoad}
                        unoptimized={true} // 外部APIからの画像なので最適化を無効化
                    />
                )}
            </div>
            {onDownload && (
                <div>
                    <button
                        onClick={handleDownload}
                        style={{
                            backgroundColor: '#059669',
                            color: 'white',
                            padding: '0.5rem 1rem',
                            border: 'none',
                            borderRadius: '4px',
                            cursor: 'pointer',
                        }}
                    >
                        Download QR Code
                    </button>
                </div>
            )}
            <div style={{
                fontSize: '0.75rem',
                color: '#6b7280',
                marginTop: '0.5rem'
            }}>
                QR Code generated by QR Server API
            </div>
        </div>
    );
};

export default QRCodeComponent;